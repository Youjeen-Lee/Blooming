<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="kopo.poly.persistance.mapper.ICommentMapper">

    <!-- 내 댓글 가져오기 -->
    <select id="getMyCommentList" parameterType="UserInfoDTO" resultType="CommentDTO">
        SELECT COMMENT_SEQ, NOTICE_SEQ, CONTENTS, DATE_FORMAT(REG_DT, '%Y-%m-%d') AS REG_DT
        FROM COMMENT
        WHERE USER_ID = #{user_id}
        ORDER BY REG_DT DESC
    </select>


    <!-- 댓글 리스트 쿼리(게시판 글 번호에서만 가져와야함, mapper는 '='를 쓴다)-->
    <select id="getCommentList" resultType="CommentDTO" parameterType="CommentDTO">
        SELECT COMMENT_SEQ, NOTICE_SEQ, CONTENTS, USER_ID,
               DATE_FORMAT(REG_DT, '%y-%m-%d %H:%i') AS REG_DT
        FROM COMMENT
        WHERE NOTICE_SEQ = #{notice_seq}
        ORDER BY COMMENT_SEQ DESC
    </select>
    <!-- 댓글 등록 쿼리 -->
    <insert id="insertCommentInfo" parameterType="CommentDTO">
        INSERT INTO COMMENT
        (
            COMMENT_SEQ, NOTICE_SEQ, CONTENTS, USER_ID, REG_DT
        )
        VALUES(
                      (SELECT IFNULL(MAX(A.COMMENT_SEQ),0)+1 FROM COMMENT A),
                      #{notice_seq},  #{contents}, #{user_id}, NOW()
              )
    </insert>
    <!-- 댓글 상세보기 쿼리 -->
<!--    <select id="getCommentInfo" resultType="CommentDTO">-->
<!--        SELECT COMMENT_SEQ, CONTENTS, USER_ID,-->
<!--               TO_CHAR(REG_DT, 'YYYY-MM-DD') AS REG_DT-->
<!--        FROM COMMENT-->
<!--        WHERE COMMENT_SEQ = #{comment_seq}-->
<!--    </select>-->
    <!-- 조회수 증가 쿼리 -->
<!--    <update id="updateNoticeReadCnt" parameterType="NoticeDTO">-->
<!--        UPDATE NOTICE SET-->
<!--            READ_CNT = READ_CNT + 1-->
<!--        WHERE-->
<!--            NOTICE_SEQ = #{notice_seq}-->
<!--    </update>-->
    <!-- 댓글 수정 쿼리 -->
    <update id="updateCommentInfo" parameterType="CommentDTO">
        UPDATE COMMENT SET
            CONTENTS = #{contents}
        WHERE
            COMMENT_SEQ = #{comment_seq}

    </update>

    <!-- 댓글 삭제 쿼리 -->
    <delete id="deleteCommentInfo" parameterType="CommentDTO">
        DELETE FROM COMMENT
        WHERE COMMENT_SEQ = #{comment_seq}
    </delete>

</mapper>