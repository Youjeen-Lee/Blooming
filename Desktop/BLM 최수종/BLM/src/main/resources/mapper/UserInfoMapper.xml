<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kopo.poly.persistance.mapper.IUserInfoMapper">

    <!-- 정보수정 페이지에 사용자 정보 -->
    <select id="getUserInfo" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            USER_ID, USER_NAME, USER_EMAIL, USER_ADDR1,
            DATE_FORMAT(JOIN_DT, '%y-%m-%d %H:%i') AS JOIN_DT
        FROM USER_INFO
        WHERE USER_ID = #{user_id}
    </select>

    <!-- 정보수정, 사용자 아이디로 접근 -->
    <update id="updateUserInfo" parameterType="UserInfoDTO">
        UPDATE USER_INFO SET
            USER_ADDR1 = #{user_addr1},
            USER_ADDR2 = #{user_addr2}
        WHERE USER_ID = #{user_id}
    </update>

    <!-- 회원가입 정보 등록 -->
    <insert id="insertUserInfo" parameterType="UserInfoDTO">
        INSERT INTO USER_INFO
        (USER_ID,
         USER_NAME,
         USER_PWD,
         USER_EMAIL,

         user_addr1,
         user_addr2,
         join_dt
            )

        VALUES (#{user_id},
                #{user_name},
                #{user_pwd},
                #{user_email},

                #{user_addr1},
                #{user_addr2},
                NOW())

    </insert>

    <!-- 로그인 실행 -->
    <select id="getLogin" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_EMAIL
        FROM USER_INFO
        WHERE USER_ID = #{user_id}
          AND USER_PWD = #{user_pwd}
    </select>

    <!-- 회원가입시 아이디 중복확인 -->
    <select id="getUserIdExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            CASE WHEN COUNT(1) = 0 THEN 'N' ELSE 'Y' END AS Exists_yn
        FROM
            USER_INFO
        WHERE
            USER_ID = #{user_id};
    </select>

    <!-- 회원가입시 이메일 중복확인 -->
    <select id="getUserEmailExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            CASE WHEN COUNT(1) = 0 THEN 'N' ELSE 'Y' END AS EXISTS_YN
        FROM
            USER_INFO
        WHERE
            USER_EMAIL = #{user_email};
    </select>

    <!-- 아이디 찾기 -->
    <select id="searchUserId" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            USER_ID
        FROM USER_INFO
        WHERE 1=1
          AND USER_EMAIL = #{user_email}

    </select>

    <!-- 비밀번호 찾기할 때 아이디랑 이메일 일치하는지 여부 확인 -->
    <select id="checkUserIdAndEmail" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID,USER_EMAIL
        FROM USER_INFO
        WHERE USER_ID = #{user_id}
          AND USER_EMAIL = #{user_email}
    </select>


    <update id="updateUserPwd" parameterType="UserInfoDTO" >
        UPDATE  USER_INFO
        SET USER_PWD = #{user_pwd}
        WHERE USER_ID = #{user_id}
    </update>

    <delete id="deleteUser" parameterType="UserInfoDTO">
        DELETE FROM USER_INFO
        WHERE USER_ID = #{user_id}
    </delete>

</mapper>